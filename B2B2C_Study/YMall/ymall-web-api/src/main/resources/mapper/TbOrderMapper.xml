<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yuu.ymall.web.api.mapper.TbOrderMapper" >
  <resultMap id="BaseResultMap" type="com.yuu.ymall.domain.TbOrder" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="payment" property="payment" jdbcType="DECIMAL" />
    <result column="payment_type" property="paymentType" jdbcType="INTEGER" />
    <result column="post_fee" property="postFee" jdbcType="DECIMAL" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="payment_time" property="paymentTime" jdbcType="TIMESTAMP" />
    <result column="consign_time" property="consignTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="close_time" property="closeTime" jdbcType="TIMESTAMP" />
    <result column="shipping_name" property="shippingName" jdbcType="VARCHAR" />
    <result column="shipping_code" property="shippingCode" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="buyer_message" property="buyerMessage" jdbcType="VARCHAR" />
    <result column="buyer_nick" property="buyerNick" jdbcType="VARCHAR" />
    <result column="buyer_comment" property="buyerComment" jdbcType="BIT" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
    <result column="updated" property="updated" jdbcType="TIMESTAMP" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from tb_order
    where id = #{id,jdbcType=VARCHAR}
  </delete>

    <!-- 取消订单 -->
    <update id="cancelOrder">
        update tb_order
        set close_time = now(), status = 5
        where id = #{orderId}
    </update>

    <insert id="insert" parameterType="com.yuu.ymall.domain.TbOrder" >
    insert into tb_order (id, payment, payment_type, post_fee,
      status, payment_time, consign_time,
      end_time, close_time, shipping_name,
      shipping_code, user_id, buyer_message,
      buyer_nick, buyer_comment, created,
      updated)
    values (#{id, jdbcType=VARCHAR}, #{payment,jdbcType=DECIMAL}, #{paymentType,jdbcType=INTEGER}, #{postFee,jdbcType=DECIMAL},
      #{status,jdbcType=INTEGER}, #{paymentTime,jdbcType=TIMESTAMP}, #{consignTime,jdbcType=TIMESTAMP},
      #{endTime,jdbcType=TIMESTAMP}, #{closeTime,jdbcType=TIMESTAMP}, #{shippingName,jdbcType=VARCHAR},
      #{shippingCode,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, #{buyerMessage,jdbcType=VARCHAR},
      #{buyerNick,jdbcType=VARCHAR}, #{buyerComment,jdbcType=BIT}, #{created,jdbcType=TIMESTAMP},
      #{updated,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.yuu.ymall.domain.TbOrder" >
    update tb_order
    set payment = #{payment,jdbcType=DECIMAL},
      payment_type = #{paymentType,jdbcType=INTEGER},
      post_fee = #{postFee,jdbcType=DECIMAL},
      status = #{status,jdbcType=INTEGER},
      payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      consign_time = #{consignTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      close_time = #{closeTime,jdbcType=TIMESTAMP},
      shipping_name = #{shippingName,jdbcType=VARCHAR},
      shipping_code = #{shippingCode,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      buyer_message = #{buyerMessage,jdbcType=VARCHAR},
      buyer_nick = #{buyerNick,jdbcType=VARCHAR},
      buyer_comment = #{buyerComment,jdbcType=BIT},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>

    <!-- 修改订单状态 -->
    <update id="updateOrderStatus">
        update tb_order
        set status = #{orderStatus}
        where id = #{orderId}
    </update>

    <!-- 支付成功，修改支付时间和支付状态 -->
    <update id="updatePayTimeAndStatus">
        update tb_order
        set payment_time = now(), status = 2
        where id = #{orderId}
    </update>

    <!-- 支付失败，修改关闭时间和支付状态 -->
    <update id="updateCloseTimeAndStatus">
        update tb_order
        set close_time = now, status = 5
        where id = #{orderId}
    </update>

    <!-- 确认收货 -->
    <update id="confirmReceipt">
        update tb_order
        set end_time = now(), status = 4
        where id = #{orderId}
    </update>

    <select  id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select id, payment, payment_type, post_fee, status, payment_time, consign_time, end_time,
    close_time, shipping_name, shipping_code, user_id, buyer_message, buyer_nick, buyer_comment,
    created, updated
    from tb_order
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, payment, payment_type, post_fee, status, payment_time, consign_time, end_time,
    close_time, shipping_name, shipping_code, user_id, buyer_message, buyer_nick, buyer_comment,
    created, updated
    from tb_order
  </select>

    <!-- sql 片断 -->
    <sql id="tbOrderBaseColumns">
        id,
        payment,
        payment_type,
        post_fee,
        status,
        payment_time,
        consign_time,
        end_time,
        close_time,
        shipping_name,
        shipping_code,
        user_id,
        buyer_message,
        buyer_nick,
        buyer_comment,
        created,
        updated
    </sql>

    <!-- 查询超时的订单 -->
    <select id="selectOrderOutTime" resultType="string">
      select id from tb_order
      where status = 0
      and created &lt;= subdate(now(), interval 2 hour)
    </select>

    <!-- 获取会员所有订单 -->
    <select id="selectByUserId" resultMap="BaseResultMap">
      select <include refid="tbOrderBaseColumns"/>
      from tb_order
      where user_id = #{userId}
      order by created desc
    </select>

    <!-- 获取会员订单总数 -->
    <select id="getMemberOrderCount" resultType="int">
      select count(*) from tb_order
      where user_id = #{userId}
    </select>

    <!-- 获取会员的订单信息 -->
    <select id="selectByUserIdAndOrderId" resultType="com.yuu.ymall.domain.TbOrder">
        select <include refid="tbOrderBaseColumns"/>
        from tb_order
        where user_id = #{userId} and id = #{orderId}
    </select>
</mapper>
