<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yuu.ymall.web.admin.mapper.TbItemMapper">
  <resultMap id="BaseResultMap" type="com.yuu.ymall.domain.TbItem">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="sell_point" jdbcType="VARCHAR" property="sellPoint" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="limit_num" jdbcType="INTEGER" property="limitNum" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="cid" jdbcType="BIGINT" property="cid" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="updated" jdbcType="TIMESTAMP" property="updated" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_item
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.yuu.ymall.domain.TbItem">
    insert into tb_item (id, title, sell_point, price,
      num, limit_num, image,
      cid, status, created,
      updated)
    values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{sellPoint,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL},
      #{num,jdbcType=INTEGER}, #{limitNum,jdbcType=INTEGER}, #{image,jdbcType=VARCHAR},
      #{cid,jdbcType=BIGINT}, #{status,jdbcType=INTEGER}, #{created,jdbcType=TIMESTAMP},
      #{updated,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.yuu.ymall.domain.TbItem">
    update tb_item
    set title = #{title,jdbcType=VARCHAR},
      sell_point = #{sellPoint,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      num = #{num,jdbcType=INTEGER},
      limit_num = #{limitNum,jdbcType=INTEGER},
      image = #{image,jdbcType=VARCHAR},
      cid = #{cid,jdbcType=BIGINT},
      status = #{status,jdbcType=INTEGER},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, title, sell_point, price, num, limit_num, image, cid, status, created,
    updated
    from tb_item
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, title, sell_point, price, num, limit_num, image, cid, status, created,
    updated
    from tb_item
  </select>

    <!-- sql 片断 -->
    <sql id="tbItemColumns">
        a.id,
        a.title,
        a.sell_point,
        a.price,
        a.num,
        a.limit_num,
        a.image,
        a.cid,
        a.status,
        a.created,
        a.updated
    </sql>

    <!-- 获取商品总数 -->
    <select id="getAllItemCount" resultType="java.lang.Integer">
        select count(*) from tb_item;
    </select>

    <!-- 条件查询商品集合 -->
    <select id="selectItemByCondition" resultType="com.yuu.ymall.domain.TbItem">
        select <include refid="tbItemColumns"/>
        from tb_item as a
        <where>
            <if test="search != null and != ''">
                AND title like concat(concat('%', #{search} ), '%')
                OR sell_point like concat(concat('%', #{search} ), '%')
                OR price like concat(concat('%', #{search} ), '%')
                OR id like concat(concat('%', #{search} ), '%')
            </if>
            <if test="cid != -1">
                AND cid = #{cid}
            </if>
        </where>
    </select>

    <!-- 根据分类 id 获取商品列表 -->
    <select id="getItemByCid" resultType="com.yuu.ymall.domain.TbItem" parameterType="map">
        select <include refid="tbItemColumns"/>
        from tb_item as a
        <where>
            <if test="cid != -1">
                AND a.cid = #{cid}
            </if>
            <if test="search != null and search != ''">
                AND (title like concat(concat('%', #{search} ), '%')
                OR sell_point like concat(concat('%', #{search} ), '%')
                OR price like concat(concat('%', #{search} ), '%')
                OR id like concat(concat('%', #{search} ), '%'))
            </if>
        </where>
        order by updated desc
    </select>

    <!-- 查询分类商品总数 -->
    <select id="getTbItemByCidCount" resultType="java.lang.Integer" parameterType="map">
        select count(*)
        from tb_item as a
        <where>
            <if test="cid != -1">
                AND a.cid = #{cid}
            </if>
        </where>
    </select>

    <!-- 下架商品 -->
    <update id="stopItemById">
        update tb_item
        set status = 0
        where id = #{id}
    </update>

    <!-- 发布商品 -->
    <update id="startItemById">
        update tb_item
        set status = 1
        where id = #{id}
    </update>
</mapper>
