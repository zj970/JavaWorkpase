<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.xiaoxiangshop.dao.AreaFreightConfigDao">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="net.xiaoxiangshop.entity.AreaFreightConfig">
	    <result column="id" property="id" />
	    <result column="version" property="version" />
        <result column="created_date" property="createdDate" />
        <result column="last_modified_date" property="lastModifiedDate" />
        <result column="continue_price" property="continuePrice" />
        <result column="continue_weight" property="continueWeight" />
        <result column="first_price" property="firstPrice" />
        <result column="first_weight" property="firstWeight" />
        <association property="shippingMethod" select="net.xiaoxiangshop.dao.ShippingMethodDao.find" column="shipping_method_id" javaType="net.xiaoxiangshop.entity.ShippingMethod" fetchType="lazy"/>
        <association property="store" select="net.xiaoxiangshop.dao.StoreDao.find" column="store_id" javaType="net.xiaoxiangshop.entity.Store" fetchType="lazy"/>
        <association property="area" select="net.xiaoxiangshop.dao.AreaDao.find" column="area_id" javaType="net.xiaoxiangshop.entity.Area" fetchType="lazy"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id,
        version,
        created_date, last_modified_date, continue_price, continue_weight, first_price, first_weight, shipping_method_id, store_id, area_id
    </sql>
	
	<!-- 查找实体对象 -->
	<select id="find" parameterType="java.lang.Long" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`area_freight_config` 
		WHERE
			`id` = #{id}
	</select>
	
	<!-- 查找实体对象集合 -->
	<select id="findSet" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`area_freight_config`
		WHERE
			${attributeName} = #{attributeValue}
	</select>
	
	<!-- 查找运费配置分页 -->
	<select id="findPage" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`area_freight_config`
		<where>
			<if test="shippingMethod != null">
				AND shipping_method_id = #{shippingMethod.id}
			</if>
			<if test="store != null">
				AND store_id = #{store.id}
			</if>
			<if test="ew.nonEmptyOfWhere == true">
				AND
			</if>
			${ew.sqlSegment}
		</where>
	</select>
	
	<!-- 判断是否存在 -->
	<select id="exists" resultType="boolean">
		SELECT
			count(*)
		FROM
			`area_freight_config`
		WHERE
			shipping_method_id = #{shippingMethod.id}
		AND store_id = #{store.id}
		AND area_id = #{area.id}
	</select>
	
	<!-- 判断是否唯一 -->
	<select id="unique" resultType="boolean">
		<if test="id != null">
			SELECT
				count(*)
			FROM
				`area_freight_config`
			WHERE
				id != #{id}
			AND shipping_method_id = #{shippingMethod.id}
			AND store_id = #{store.id}
			AND area_id = #{area.id}
		</if>
		<if test="id == null">
			SELECT
				count(*)
			FROM
				`area_freight_config`
			WHERE
				shipping_method_id = #{shippingMethod.id}
			AND store_id = #{store.id}
			AND area_id = #{area.id}
		</if>
	</select>
	
	<!-- 保存 -->
	<insert id="save" parameterType="net.xiaoxiangshop.entity.AreaFreightConfig">
   		INSERT INTO area_freight_config(
			id ,
			created_date ,
			version ,
			continue_price ,
			continue_weight ,
			first_price ,
			first_weight ,
			shipping_method_id ,
			store_id ,
			area_id
		) VALUES (
			#{entity.id}, 
			#{entity.createdDate}, 
			#{entity.version}, 
			#{entity.continuePrice}, 
			#{entity.continueWeight}, 
			#{entity.firstPrice}, 
			#{entity.firstWeight}, 
			#{entity.shippingMethod.id}, 
			#{entity.store.id}, 
			#{entity.area.id}
		)
  	</insert>
	
	<!-- 更新 -->
	<update id="update" parameterType="net.xiaoxiangshop.entity.AreaFreightConfig">
    	UPDATE area_freight_config
		SET last_modified_date = #{entity.lastModifiedDate},
			version = #{entity.version} + 1,
			continue_price = #{entity.continuePrice},
			continue_weight = #{entity.continueWeight},
			first_price = #{entity.firstPrice},
			first_weight = #{entity.firstWeight},
			store_id = #{entity.store.id},
			area_id = #{entity.area.id}
		WHERE
			id = #{entity.id}
		AND version = #{entity.version}
  	</update>
  
</mapper>
