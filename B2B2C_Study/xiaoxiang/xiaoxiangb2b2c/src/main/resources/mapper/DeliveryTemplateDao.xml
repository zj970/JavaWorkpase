<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.xiaoxiangshop.dao.DeliveryTemplateDao">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="net.xiaoxiangshop.entity.DeliveryTemplate">
	    <result column="id" property="id" />
	    <result column="version" property="version" />
        <result column="created_date" property="createdDate" />
        <result column="last_modified_date" property="lastModifiedDate" />
        <result column="background" property="background" />
        <result column="content" property="content" />
        <result column="height" property="height" />
        <result column="is_default" property="isDefault" />
        <result column="memo" property="memo" />
        <result column="name" property="name" />
        <result column="offset_x" property="offsetX" />
        <result column="offset_y" property="offsetY" />
        <result column="width" property="width" />
        <association property="store" select="net.xiaoxiangshop.dao.StoreDao.find" column="store_id" javaType="net.xiaoxiangshop.entity.Store" fetchType="lazy"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id,
        version,
        created_date, last_modified_date, background, content, height, is_default, memo, name, offset_x, offset_y, width, store_id
    </sql>
	
	<!-- 查找实体对象 -->
	<select id="find" parameterType="java.lang.Long" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`delivery_template` 
		WHERE
			`id` = #{id}
	</select>
	
	<!-- 查找实体对象集合 -->
	<select id="findSet" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`delivery_template`
		WHERE
			${attributeName} = #{attributeValue}
	</select>
	
	<!-- 查找所有实体对象集合 -->
	<select id="findAll" resultType="DeliveryTemplate">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`delivery_template`
	</select>
	
	<!-- 查找默认快递单模板 -->
	<select id="findDefault" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			delivery_template
		WHERE
			is_default = TRUE
		AND store_id = #{store.id}
	</select>
	
	<!-- 查找快递单模板 -->
	<select id="findList" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			delivery_template
		<where>
			<if test="store != null">
				AND store_id = #{store.id}
			</if>
		</where>
	</select>
	
	<!-- 查找快递单模板分页 -->
	<select id="findPage" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`delivery_template`
		<where>
			<if test="store != null">
				AND store_id = #{store.id}
			</if>
			<if test="ew.nonEmptyOfWhere == true">
				AND
			</if>
			${ew.sqlSegment}
		</where>
	</select>
	
	<!-- 清除默认 -->
	<update id="clearDefault">
		UPDATE delivery_template
		SET is_default = 0
		WHERE
			is_default = 1
		AND store_id = #{store.id}
	</update>
	
	<!-- 清除默认[排除快递单模板] -->
	<update id="clearDefaultExclude">
		UPDATE delivery_template
		SET is_default = 0
		WHERE
			is_default = 1
		AND id <![CDATA[ <> ]]> #{exclude.id}
		AND store_id = #{exclude.store.id}
	</update>
	
	<!-- 保存 -->
	<insert id="save" parameterType="net.xiaoxiangshop.entity.DeliveryTemplate">
    	INSERT INTO delivery_template(
			id ,
			created_date ,
			version ,
			background ,
			height ,
			is_default ,
			memo ,
			`name` ,
			offset_x ,
			offset_y ,
			width ,
			store_id ,
			content
		) VALUES (
			#{entity.id}, 
			#{entity.createdDate}, 
			#{entity.version}, 
			#{entity.background}, 
			#{entity.height}, 
			#{entity.isDefault}, 
			#{entity.memo}, 
			#{entity.name}, 
			#{entity.offsetX}, 
			#{entity.offsetY}, 
			#{entity.width}, 
			#{entity.store.id}, 
			#{entity.content}
		)
  	</insert>
  	
  	<!-- 更新 -->
  	<update id="update" parameterType="net.xiaoxiangshop.entity.DeliveryTemplate">
    	UPDATE delivery_template
		SET last_modified_date = #{entity.lastModifiedDate},
			version = #{entity.version} + 1,
			background = #{entity.background},
			height = #{entity.height},
			is_default = #{entity.isDefault},
			memo = #{entity.memo},
			`name` = #{entity.name},
			offset_x = #{entity.offsetX},
			offset_y = #{entity.offsetY},
			width = #{entity.width},
			store_id = #{entity.store.id},
			content = #{entity.content}
		WHERE
			id = #{entity.id}
		AND version = #{entity.version}
  	</update>
</mapper>
