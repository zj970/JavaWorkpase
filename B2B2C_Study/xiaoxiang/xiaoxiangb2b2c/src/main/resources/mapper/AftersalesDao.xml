<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.xiaoxiangshop.dao.AftersalesDao">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="net.xiaoxiangshop.entity.Aftersales">
	    <result column="id" property="id" />
	    <result column="version" property="version" />
        <result column="created_date" property="createdDate" />
        <result column="last_modified_date" property="lastModifiedDate" />
        <result column="delivery_corp" property="deliveryCorp" />
        <result column="delivery_corp_code" property="deliveryCorpCode" />
        <result column="reason" property="reason" />
        <result column="type" property="type" />
        <result column="status" property="status" />
        <result column="tracking_no" property="trackingNo" />
        <association property="member" select="net.xiaoxiangshop.dao.MemberDao.find" column="member_id" javaType="net.xiaoxiangshop.entity.Member" fetchType="lazy"/>
        <association property="store" select="net.xiaoxiangshop.dao.StoreDao.find" column="store_id" javaType="net.xiaoxiangshop.entity.Store" fetchType="lazy"/>
        <collection property="aftersalesItems" select="net.xiaoxiangshop.dao.AftersalesItemDao.findSet" column="{attributeName=aftersales_id, attributeValue=id}" ofType="net.xiaoxiangshop.entity.AftersalesItem" fetchType="lazy"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
       aftersales.id,
       aftersales.version,
       aftersales.type, aftersales.created_date, aftersales.last_modified_date, delivery_corp, delivery_corp_code, reason, aftersales.status, tracking_no, aftersales.account, aftersales.bank, aftersales.method, aftersales.address, aftersales.area, aftersales.consignee, aftersales.phone, member_id, store_id, 'aftersales_id'
    </sql>
	
	<!-- 查找实体对象 -->
	<select id="find" parameterType="java.lang.Long" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`aftersales` aftersales
		WHERE
			`id` = #{id}
	</select>
	
	<!-- 根据属性查找实体对象 -->
	<select id="findByAttribute" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`aftersales` aftersales
		WHERE
			${attributeName} = #{attributeValue}
	</select>
	
	<!-- 查找实体对象集合 -->
	<select id="findSet" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`aftersales` aftersales
		WHERE
			${attributeName} = #{attributeValue}
	</select>
	
	<!-- 查找品牌 -->
	<select id="findList" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`aftersales` aftersales
		WHERE id IN (SELECT aftersales_id FROM aftersales_item
		<if test="orderItems != null and orderItems.size != 0">
			WHERE id IN 
	        <foreach collection="orderItems" item="orderItem" open="(" separator="," close="))" >
	        	#{orderItem.id}
	        </foreach>
		</if>
	</select>
	
	<!-- 查找分页 -->
	<select id="findPage" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`aftersales` aftersales
		LEFT JOIN users member ON aftersales.member_id = member.id
		LEFT JOIN store store ON aftersales.store_id = store.id
		<where>
			<if test="status != null">
				AND aftersales.status = #{status}
			</if>
			<if test="type != null">
				AND aftersales.type = #{type}
			</if>
			<if test="member != null">
				AND aftersales.member_id = #{member.id}
			</if>
			<if test="store != null">
				AND aftersales.store_id = #{store.id}
			</if>
			<if test="ew.nonEmptyOfWhere == true">
				AND
			</if>
			${ew.sqlSegment}
		</where>
	</select>
	
	<!-- 更新 -->
	<update id="update" parameterType="net.xiaoxiangshop.entity.Aftersales">
    	UPDATE aftersales
		SET last_modified_date = #{entity.lastModifiedDate},
			version = #{entity.version} + 1,
			`status` = #{entity.status}
		WHERE
			id = #{entity.id}
		AND version = #{entity.version}
  	</update>


	<!-- 查询售后数量 -->
	<select id="count" resultType="long">
		SELECT
		count(*)
		FROM
		`aftersales` a
		WHERE
		1 = 1
		<if test="type != null">
			AND type = #{type.ordinal}
		</if>
		<if test="status != null" >
			AND `status` = #{status.ordinal}
		</if>
		<if test="store != null">
			AND store_id = #{store.id}
		</if>
		<if test="member != null">
			AND member_id = #{member.id}
		</if>
	</select>

</mapper>
