<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.xiaoxiangshop.dao.SkuDao">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="net.xiaoxiangshop.entity.Sku">
	    <result column="id" property="id" />
	    <result column="version" property="version" />
        <result column="created_date" property="createdDate" />
        <result column="last_modified_date" property="lastModifiedDate" />
        <result column="allocated_stock" property="allocatedStock" />
        <result column="cost" property="cost" />
        <result column="exchange_point" property="exchangePoint" />
        <result column="is_default" property="isDefault" />
		<result column="is_pro" property="isPro" />
		<result column="sku_normal_price0" property="skuNormalPrice0" />
		<result column="sku_normal_price1" property="skuNormalPrice1" />
		<result column="sku_normal_price2" property="skuNormalPrice2" />
		<result column="sku_normal_price3" property="skuNormalPrice3" />
		<result column="sku_promotion_price0" property="skuPromotionPrice0" />
		<result column="sku_promotion_price1" property="skuPromotionPrice1" />
		<result column="sku_promotion_price2" property="skuPromotionPrice2" />
		<result column="sku_promotion_price3" property="skuPromotionPrice3" />
		<result column="prom_start_time" property="promStartTime" />
		<result column="prom_end_time" property="promEndTime" />
        <result column="market_price" property="marketPrice" />
        <result column="max_commission" property="maxCommission" />
        <result column="price" property="price" />
		<result column="internal_number" property="internalNumber" />
		<result column="counter_no" property="counterNo" />
		<result column="counter_name" property="counterName" />
        <result column="reward_point" property="rewardPoint" />
		<result column="sync_time" property="syncTime" />
		<result column="sync_flag" property="syncFlag" />
        <result column="sn" property="sn" />
		<result column="is_zsz" property="isZsz" />
        <result column="specification_values" property="specificationValues" jdbcType="LONGVARCHAR"
				javaType="java.util.ArrayList" typeHandler="net.xiaoxiangshop.handlers.SpecificationValueConverter" />
        <result column="stock" property="stock" />
        <association property="product" select="net.xiaoxiangshop.dao.ProductDao.find" column="product_id" javaType="net.xiaoxiangshop.entity.Product" fetchType="lazy"/>
        <collection property="cartItems" select="net.xiaoxiangshop.dao.CartItemDao.findSet" column="{attributeName=sku_id, attributeValue=id}" ofType="net.xiaoxiangshop.entity.CartItem" fetchType="lazy"/>
        <collection property="orderItems" select="net.xiaoxiangshop.dao.OrderItemDao.findSet" column="{attributeName=sku_id, attributeValue=id}" ofType="net.xiaoxiangshop.entity.OrderItem" fetchType="lazy"/>
        <collection property="orderShippingItems" select="net.xiaoxiangshop.dao.OrderShippingItemDao.findSet" column="{attributeName=sku_id, attributeValue=id}" ofType="net.xiaoxiangshop.entity.OrderShippingItem" fetchType="lazy"/>
        <collection property="productNotifies" select="net.xiaoxiangshop.dao.ProductNotifyDao.findSet" column="{attributeName=sku_id, attributeValue=id}" ofType="net.xiaoxiangshop.entity.ProductNotify" fetchType="lazy"/>
        <collection property="stockLogs" select="net.xiaoxiangshop.dao.StockLogDao.findSet" column="{attributeName=sku_id, attributeValue=id}" ofType="net.xiaoxiangshop.entity.StockLog" fetchType="lazy"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        sku.id,
        sku.version,
        sku.created_date, sku.last_modified_date, sku.allocated_stock, sku.cost, sku.exchange_point, sku.is_default, sku.market_price, sku.max_commission,
        sku.price, sku.reward_point, sku.sn, sku.specification_values, sku.stock, sku.product_id,sku.is_pro,
        sku_normal_price0,sku_normal_price1,sku_normal_price2,sku_normal_price3,sku_promotion_price0,sku_promotion_price1,sku_promotion_price2,
        sku_promotion_price3,
        sku.internal_number,sku.counter_no,sku.counter_name,sku.sync_time,sku.sync_flag,
        'sku_id',
        sku.prom_start_time,
        sku.prom_end_time,
        sku.is_zsz
    </sql>
	
	<!-- 查找实体对象 -->
	<select id="find" parameterType="java.lang.Long" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`sku` sku
		WHERE
			`id` = #{id}
	</select>
	
	<!-- 根据属性查找实体对象 -->
	<select id="findByAttribute" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`sku` sku
		WHERE
			${attributeName} = #{attributeValue}
	</select>
	
	<!-- 查找实体对象集合 -->
	<select id="findSet" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`sku` sku
		<choose>

	  		<otherwise>
	  			WHERE
					${attributeName} = #{attributeValue}
	  		</otherwise>
	  	</choose>
	</select>
	
	<!-- 查找商品 -->
	<select id="findList" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`sku` sku
		<where>
			<if test="store != null">
				AND sku.store_id = #{store.id}
			</if>
			<if test="type != null">
				AND sku.type = #{type.ordinal}
			</if>
			<if test="matchs != null and matchs.size > 0 ">
				AND sku.id NOT IN
				<foreach collection="matchs" item="match" open="(" separator="," close=")" >
		        	#{match.id}
		        </foreach>
			</if>
			<if test="count != null">
				LIMIT 0, ${count}
			</if>
		</where>
	</select>
	
	<!-- 通过编号、名称查找SKU -->
	<select id="search" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`sku` sku
		LEFT JOIN product product ON sku.product_id = product.id
		WHERE
			(sku.sn LIKE concat('%', #{keyword}, '%') OR product.name LIKE concat('%', #{keyword}, '%'))
		<if test="store != null">
			AND product.store_id = #{store.id}
		</if>
		<if test="type != null">
			AND product.type = #{type.ordinal}
		</if>
		<if test="excludes != null and excludes.size > 0 ">
			AND sku.id NOT IN
			<foreach collection="excludes" item="exclude" open="(" separator="," close=")" >
	        	#{exclude.id}
	        </foreach>
		</if>
		<if test="count != null">
			LIMIT 0, ${count}
		</if>
	</select>
	
	<!-- 判断是否存在 -->
	<select id="exists" resultType="boolean">
		SELECT
			COUNT(1)
		FROM
			`sku`
		WHERE
			${attributeName} = #{attributeValue}
	</select>


	
	<!-- 删除 -->
  	<update id="remove" parameterType="net.xiaoxiangshop.entity.Sku">
  		DELETE FROM `stock_log` WHERE `sku_id` = #{entity.id};
		DELETE FROM `cart_item` WHERE `sku_id` = #{entity.id};
  		DELETE FROM `sku` WHERE `id` = #{entity.id};
  	</update>
  	
	<!-- 保存 -->
	<insert id="save" parameterType="net.xiaoxiangshop.entity.Sku">
    	INSERT INTO sku(
			id ,
			created_date ,
			version ,
			allocated_stock ,
			cost ,
			exchange_point ,
			is_default ,
			market_price ,
			max_commission ,
			price ,
			reward_point ,
			sn ,
			specification_values ,
			stock ,
			product_id,
			counter_no,
			counter_name,
			sku_normal_price0,
			sku_normal_price1,
			sku_normal_price2,
			sku_normal_price3,
			sku_promotion_price0,
			sku_promotion_price1,
			sku_promotion_price2,
			sku_promotion_price3,
			internal_number,
			prom_start_time,
			prom_end_time,
			is_pro
		) VALUES (
			#{entity.id}, 
			#{entity.createdDate}, 
			#{entity.version}, 
			#{entity.allocatedStock}, 
			#{entity.cost}, 
			#{entity.exchangePoint}, 
			#{entity.isDefault}, 
			#{entity.marketPrice}, 
			#{entity.maxCommission}, 
			#{entity.price}, 
			#{entity.rewardPoint}, 
			#{entity.sn}, 
			#{entity.specificationValues, typeHandler=net.xiaoxiangshop.handlers.SpecificationValueConverter},
			#{entity.stock}, 
			#{entity.product.id},
			#{entity.counterNo},
			#{entity.counterName},
			#{entity.skuNormalPrice0},
			#{entity.skuNormalPrice1},
			#{entity.skuNormalPrice2},
			#{entity.skuNormalPrice3},
			#{entity.skuPromotionPrice0},
			#{entity.skuPromotionPrice1},
			#{entity.skuPromotionPrice2},
			#{entity.skuPromotionPrice3},
			#{entity.internalNumber},
			#{entity.promStartTime},
			#{entity.promEndTime},
			#{entity.isPro}
		)
  	</insert>
  	
  	<!-- 更新 -->
  	<update id="update" parameterType="net.xiaoxiangshop.entity.Sku">
   		UPDATE sku
		SET last_modified_date = #{entity.lastModifiedDate},
			version = #{entity.version} + 1,
			allocated_stock = #{entity.allocatedStock},
			cost = #{entity.cost},
			exchange_point = #{entity.exchangePoint},
			is_default = #{entity.isDefault},
			market_price = #{entity.marketPrice},
			max_commission = #{entity.maxCommission},
			price = #{entity.price},
			reward_point = #{entity.rewardPoint},
			sku_normal_price0 = #{entity.skuNormalPrice0},
			sku_normal_price1 = #{entity.skuNormalPrice1},
			sku_normal_price2 = #{entity.skuNormalPrice2},
			sku_normal_price3 = #{entity.skuNormalPrice3},
			sku_promotion_price0 = #{entity.skuPromotionPrice0},
			sku_promotion_price1 = #{entity.skuPromotionPrice1},
			sku_promotion_price2 = #{entity.skuPromotionPrice2},
			sku_promotion_price3 = #{entity.skuPromotionPrice3},
			sku_promotion_price3 = #{entity.skuPromotionPrice3},
			stock = #{entity.stock},
			is_pro = #{entity.isPro},
			is_zsz = #{entity.isZsz},
			sync_time = #{entity.syncTime},
			sync_flag = #{entity.syncFlag},
			counter_no=	#{entity.counterNo},
			counter_name = #{entity.counterName},
			prom_start_time = #{entity.promStartTime},
			prom_end_time = #{entity.promEndTime},
			internal_number=#{entity.internalNumber}
		WHERE
			id = #{entity.id}
		AND version = #{entity.version}
  	</update>


	<!-- 查找实体对象集合 -->
	<select id="findErpSet" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List"></include>
		FROM
		`sku` sku ,
		 product p,
		 store s
		 where p.id=sku.product_id and p.store_id=s.id  and s.store_no=#{mddm}  and sku.internal_number=#{internal_number}

	</select>

</mapper>
