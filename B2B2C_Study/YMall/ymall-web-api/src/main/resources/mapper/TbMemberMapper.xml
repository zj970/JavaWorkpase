<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yuu.ymall.web.api.mapper.TbMemberMapper" >
  <resultMap id="BaseResultMap" type="com.yuu.ymall.domain.TbMember" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="file" property="file" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
    <result column="updated" property="updated" jdbcType="TIMESTAMP" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from tb_member
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yuu.ymall.domain.TbMember" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_member (username, password, phone,
      email, sex, state,
      file, description, created,
      updated)
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
      #{email,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER},
      #{file,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{created,jdbcType=TIMESTAMP},
      #{updated,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.yuu.ymall.domain.TbMember" >
    update tb_member
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      file = #{file,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <!-- 会员根据手机号或邮箱修改密码 -->
    <update id="updatePassword">
      update tb_member
      set password = #{password}
      where phone = #{account} OR email = #{account}
    </update>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, username, password, phone, email, sex, state, file, description, created,
    updated
    from tb_member
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, username, password, phone, email, sex, state, file, description, created,
    updated
    from tb_member
  </select>

    <!-- SQL 片断 -->
    <sql id="tbMemberBaseColumns">
        a.id,
        a.username,
        a.password,
        a.phone,
        a.email,
        a.sex,
        a.state,
        a.file,
        a.description,
        a.created,
        a.updated
    </sql>

    <!-- 通过手机号查询会员 -->
    <select id="selectByPhone" resultType="tbMember">
        select <include refid="tbMemberBaseColumns"/>
        from tb_member as a
        where phone = #{phone}
    </select>

    <!-- 会员注册 -->
    <insert id="register" parameterType="tbMember">
        insert into tb_member(phone, password, state, created, updated)
        values (#{phone}, #{password}, #{state}, #{created}, #{updated})
    </insert>

    <!-- 根据邮箱查询会员 -->
    <select id="selectByEmail" resultMap="BaseResultMap">
      select <include refid="tbMemberBaseColumns"/>
      from tb_member as a
      where email = #{email}
    </select>

    <!-- 根据手机号或邮箱查询会员 -->
    <select id="selectByPhoneOrEmail" resultType="com.yuu.ymall.domain.TbMember">
        select <include refid="tbMemberBaseColumns"/>
        from tb_member as a
        where phone = #{account} or email = #{account}
    </select>
</mapper>
